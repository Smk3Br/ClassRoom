// <auto-generated />
using System;
using ClassRoom.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassRoom.Persistence.Migrations
{
    [DbContext(typeof(ClassRoomContext))]
    partial class ClassRoomContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("ClassRoom.Domain.Aula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BlocoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Curso")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAula")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BlocoId");

                    b.ToTable("Aulas");
                });

            modelBuilder.Entity("ClassRoom.Domain.Bloco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Local")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusBloco")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Blocos");
                });

            modelBuilder.Entity("ClassRoom.Domain.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BlocoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BlocoId");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("ClassRoom.Domain.ProfessorBloco", b =>
                {
                    b.Property<int>("BlocoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BlocoId", "ProfessorId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("ProfessorBlocos");
                });

            modelBuilder.Entity("ClassRoom.Domain.Aula", b =>
                {
                    b.HasOne("ClassRoom.Domain.Bloco", "Bloco")
                        .WithMany("Aulas")
                        .HasForeignKey("BlocoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bloco");
                });

            modelBuilder.Entity("ClassRoom.Domain.Professor", b =>
                {
                    b.HasOne("ClassRoom.Domain.Bloco", null)
                        .WithMany("Professores")
                        .HasForeignKey("BlocoId");
                });

            modelBuilder.Entity("ClassRoom.Domain.ProfessorBloco", b =>
                {
                    b.HasOne("ClassRoom.Domain.Bloco", "Bloco")
                        .WithMany("ProfessorBlocos")
                        .HasForeignKey("BlocoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassRoom.Domain.Professor", "Professor")
                        .WithMany("ProfessorBlocos")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bloco");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("ClassRoom.Domain.Bloco", b =>
                {
                    b.Navigation("Aulas");

                    b.Navigation("ProfessorBlocos");

                    b.Navigation("Professores");
                });

            modelBuilder.Entity("ClassRoom.Domain.Professor", b =>
                {
                    b.Navigation("ProfessorBlocos");
                });
#pragma warning restore 612, 618
        }
    }
}
